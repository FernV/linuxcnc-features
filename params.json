{"name":"Linuxcnc-features","tagline":"LinuxCNC Features","body":"LinuxCNC Features v2 - native realtime CAM for LinuxCNC\r\n\r\nWelcome to this advanced version of LinuxCNC-Features.\r\n\r\nIt is an almost complete re-write but with a few changes to your files\r\n it will take full advantage of all the new features\r\n there is also some settings you can do in the beginning of features.py\r\n\r\n\r\n1. Testing Stand Alone\r\n--------------------------------------------------------------------------------\r\nYou are invited to test it and all you have to do is make sure you have python-lxml installed.\r\nTo install python-lxml, simply open a terminal and copy the following command :\r\n\r\nsudo apt-get install python-lxml\r\n\r\nDownload LinuxCNC-Features in the folder of your choice (recommended is ~/linuxcnc-features)\r\n\r\nMake sure features.py is executable\r\n\r\nOpen a terminal in features directory and type ./features.py\r\n(Or simply double click on it)\r\nDefault catalog is mill\r\n\r\nAnd yes, start linuxcnc in a terminal with this command :\r\n'linuxcnc ~/linuxcnc/configs/sim.axis/axis.ini' (not axis_mm.ini).\r\nYou can start it before or after features.py\r\n\r\nOpen some examples and if all is well, enjoy.\r\n\r\n\r\n2. Using Embedded\r\n--------------------------------------------------------------------------------\r\nInstall by copying the following lines in a terminal\r\n\r\n1. Install python-lxml\r\n\tsudo apt-get install python-lxml \r\n\r\n\r\n2. Create links into /usr/share/pyshared/gladevcp/ \r\n\t(change directory as required)\r\n\t\r\n\tcd /usr/share/pyshared/gladevcp/\r\n\tsudo ln /home/$USER/linuxcnc-features/features.py -s\r\n\tsudo ln /home/$USER/linuxcnc-features/features.glade -s\r\n\t\r\n\r\n3. Change hal_pythonplugin.py in /usr/share/pyshared/gladevcp/\r\n\r\n\tsudo gedit /usr/share/pyshared/gladevcp/hal_pythonplugin.py\r\n\r\n\tAdd this new line anywhere\r\n\t\tfrom features import Features\r\n\r\n\r\n4. Change hal_python.xml in /usr/share/glade3/catalogs glade3 can be glade2\r\n\r\n\tsudo gedit /usr/share/glade3/catalogs/hal_python.xml\r\n\r\n\tFind :  <glade-widget-classes>\r\n\t(it is in the beginning)\r\n\tAdd after:\r\n\t\t<glade-widget-class name=\"Features\" generic-name=\"features\" title=\"features\">\r\n\t\t    <properties>\r\n\t\t        <property id=\"size\" query=\"False\" default=\"1\" visible=\"False\"/>\r\n\t\t        <property id=\"spacing\" query=\"False\" default=\"0\" visible=\"False\"/>\r\n\t\t        <property id=\"homogeneous\" query=\"False\" default=\"0\" visible=\"False\"/>\r\n\t\t    </properties>\r\n\t\t</glade-widget-class>\r\n\r\n\tFind :  <glade-widget-group name=\"python\" title=\"HAL Python\">\r\n\tAdd after :\r\n\t\t<glade-widget-class-ref name=\"Features\"/>\r\n\r\n\tIMPORTANT NOTE : when linuxcnc updates, it recreates directories and if features do not load\r\n\tyou will have to redo steps 2, 3 and 4\r\n\t\r\n\t\r\n5. Create links into /usr/lib/pymodules/python2.7/gladevcp\r\n\r\n\tcd /usr/lib/pymodules/python2.7/gladevcp\r\n\tsudo ln /usr/share/pyshared/gladevcp/features.py -s\r\n\tsudo ln /usr/share/pyshared/gladevcp/features.glade -s\r\n\r\n\r\n6. Open your linuxcnc ini file (follow the example in ~/linuxcnc-features/mill.ini)\r\n\tI recommend you use ~/linuxcnc=features/mill.ini or ~/linuxcnc-features/lathe.ini\r\n\tfind \r\n\t\t[DISPLAY]\r\n \t\tmake sure DISPLAY = axis\r\n\tadd this line anywhere in the section\r\n\t\tGLADEVCP = -U --catalog=mill features.ui\r\n\tor\r\n\t\tGLADEVCP = -U --catalog=lathe features.ui\r\n\r\n\tin the same section, find PROGRAM_PREFIX\r\n\tif it does not exist, add it and give it the value\r\n\t\tPROGRAM_PREFIX = ./scripts\r\n\r\n\tfind \r\n\t\t[RS274NGC] section\r\n\tadd the path to ngc sub that will be called from your ngc scripts that you load in linuxcnc\r\n\t\tSUBROUTINE_PATH = ./lib\r\n\r\n\tfeatures.ui is allready in ~/linuxcnc-features directory\r\n\r\n\r\nYou should now be able to start linuxcnc and have Features vcp embedded in axis\r\nTHE COMMAND IS : linuxcnc /home/$USER/linuxcnc-features/mill.ini\r\n\r\n\r\n7. Optional: Translations\r\n\tTranslation will work in Stand Alone AND Embedded modes\r\n\r\n\tMake links in your system locale directories to translation files\r\n\t\r\n\tcd /usr/share/locale/<<<YOUR LOCALE>>>/LC_MESSAGES\r\n\t\r\n\tsudo ln /<full path to features sourse>/locale/<<<YOUR LOCALE>>>/LC_MESSAGES/linuxcnc-features.mo -s\r\n\r\n\tExample:\r\n\tcd /usr/share/locale/fr/LC_MESSAGES\r\n\tsudo ln /home/$USER/linuxcnc/features/locale/fr/LC_MESSAGES/linuxcnc-features.mo -s\r\n\r\n\r\n3.\tExtending subroutines\r\n--------------------------------------------------------------------------------\r\n\r\n1. Param subsitutions\r\n\t\"#param_name\" can be used to substitude parameters from the feature. \r\n\t\"#self_id\" - unique id made of feature Name + smallest integer id. \r\n\r\n2. Eval and exec\t\r\n\t<eval>\"hello world!\"</eval>\t\r\n\teverything inside &lt;eval&gt; tag will be passed\r\n\ttrought python's eval function. \r\n\t\r\n\t<exec>print \"hello world\"</exec>\r\n\tallmost the same but will take all printed data.\r\n\t\r\n\tyou can use self as feature's self.\r\n\r\n3. Including Gcode\r\n\tG-code ngc files can be included by using one of the following functions:\r\n\t\r\n\t[DEFINITIONS]\r\n\tcontent = \r\n\t\t<eval>self.include_once(\"rotate-xy.ngc\")</eval>\r\n\t\t<eval>self.include(\"rotate-xy.ngc\")</eval>\r\n\r\n4. Data types\r\n\t[SUBROUTINE] type should be lower case, short, without space. Ex : circle, rect, probe-dn\r\n\r\n\tParams types are : string, float, int, bool (or boolean), header (or hdr), combo, items\r\n\tNote : you can change string, float and int types on the fly with the context menu. \r\n\tThis is usefull with variables\r\n\t\r\n\twhen using a value like #<var_name> use string because if will evaluate to 0 if int used or 0.0 if float\r\n\t\r\n\tExamples in ini/mill/fv_circle.ini and others\r\n\t\r\n\tNote : icons and images only need name.ext\r\n\t\r\n--------------------------------------------------------------------------------\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}