[SUBROUTINE]
icon = center-rect.png
name = Rectangle
image = center-rect.png
type = rect
html_help = help/rectangles.html
help = 	<b>Creates rectangle from 2 points</b>
	Corners can be radiused or chamfered
order = ena fc h1 x0 y0 x1 y1 h2 ct cr h3 opt dir s dpt

[PARAM_ENA]
name = Enabled
type = bool
value = 1

[PARAM_FC]
name = Show final cut
type = bool
value = 1

[PARAM_H1]
name = <b>--- General ---</b>
type = header

[PARAM_X0]
name = X0
type = float
icon = x.png
tool_tip = First point
value = 0

[PARAM_Y0]
name = Y0
type = float
icon = y.png
tool_tip = First point
value = 0

[PARAM_X1]
name = X1
type = float
icon = x.png
tool_tip = Second point
value = 70

[PARAM_Y1]
name = Y1
type = float
icon = y.png
tool_tip = Second point
value = 40

[PARAM_H2]
name = <b>--- Style ---</b>
type = header

[PARAM_CT]
name = Corner Style
type = combo
options = None=0:Chamfer=1:Rounded=2:Inverted Round=3
#icon = corner-radius.png
tool_tip = Select corner style
value = 0

[PARAM_CR]
name = Corner radius
type = float
icon = corner-radius.png
tool_tip = Positive or negative value
value = 0

[PARAM_H3]
name = <b>--- Cutting params ---</b>
type = header

[PARAM_OPT]
name = Cut options
type = combo
options = Inside=0:Outside=1:On the line=2:Create a pocket=3
icon = g4x.png
tool_tip = Select tool path
value = 0

[PARAM_DIR]
name = Cut direction
type = combo
options = Clockwise=2:Counter-Clockwise=3
icon = cw-ccw.png
tool_tip = Direction of path
value = 2

[PARAM_S]
name = Cut start
type = string
icon = dz.png
tool_tip = Surface is usual
value = #<_surface>

[PARAM_DPT]
name = Cut down to
type = string
icon = height.png
tool_tip = Negative value
value = #<_depth>


[DEFINITIONS]
content = 
	<eval>self.include_once("dot.ngc")</eval>
	<eval>self.include_once("line.ngc")</eval>
	<eval>self.include_once("rotate-xy.ngc")</eval>
	<eval>self.include_once("fv_cut-to.ngc")</eval>
	<eval>self.include_once("fv_entry-angle.ngc")</eval>
	<eval>self.include_once("fv_entry-arc.ngc")</eval>
	
	<eval>self.include_once("fv_rectangle.ngc")</eval>	


[CALL]
content = 
 	o<#self_id> if [#param_ena]
 		#<w>  = [#param_x1 - #param_x0]
 		#<h>  = [#param_y1 - #param_y0]
 		#<cr> = [#param_cr * #<_units_w>]
 		#<dpt> = [#param_dpt * #<_units_d>]
 		o<fv_rectangle> CALL [#param_x0] [#param_y0] [0] [#<w>] [#<h>] [0] [#param_ct] [#<cr>] [#param_opt] [#param_dir] [#param_s] [#<dpt>] [#param_fc]
 	o<#self_id> endif

[BEFORE]
content = 
	
[AFTER]
content = 
