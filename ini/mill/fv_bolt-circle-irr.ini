[SUBROUTINE]
icon = tool.png
name = Drill Circle
image = simp.png
type = drill-cir
help = 	<b>Create a irregular circle</b>
order = ena hdr1 num cx cy hdr2 d hdr4 h1 h2 h3 h4 h5 h6 hdr3 start depth


[PARAM_ENA]
name = Enabled
type = bool
value = 1

[PARAM_HDR1]
type = header
name = <b>--- General ---</b>

[PARAM_HDR2]
type = header
name = <b>--- Dimension ---</b>

[PARAM_HDR4]
type = header
name = <b>--- Holes positions ---</b>

[PARAM_HDR3]
type = header
name = <b>--- Drilling params ---</b>

[PARAM_CX]
name = cX
type = float
icon = center.png
tool_tip = Center of circle
value = 0

[PARAM_CY]
name = cY
type = float
icon = center.png
tool_tip = Center of circle
value = 0

[PARAM_D]
name = Diameter
type = float
minimum_value = 0.0
icon = diameter.png
tool_tip = Diameter of circle
value = 2

[PARAM_NUM]
name = Number of holes
type = int
minimum_value = 1
maximum_value = 6
icon = num.png
tool_tip = Number of holes
value = 3

[PARAM_H1]
name = Hole 1 At
type = float
digits = 2
icon = angle.png
tool_tip = Angle
value = 10

[PARAM_H2]
name = Hole 2 At
type = float
digits = 2
icon = angle.png
tool_tip = Angle
value = 60

[PARAM_H3]
name = Hole 3 At
type = float
digits = 2
icon = angle.png
tool_tip = Angle
value = 120

[PARAM_H4]
name = Hole 4 At
type = float
digits = 2
icon = angle.png
tool_tip = Angle
value = 0

[PARAM_H5]
name = Hole 5 At
type = float
digits = 2
icon = angle.png
tool_tip = Angle
value = 0

[PARAM_H6]
name = Hole 6 At
type = float
digits = 2
icon = angle.png
tool_tip = Angle
value = 0

[PARAM_DEPTH]
name = Drill depth
type = float
icon = dz.png
tool_tip = Depth of drilling
value = -0.3

[PARAM_START]
name = Start drilling
type = float
icon = surface.png
tool_tip = Start drilling at height
value = 0.0

[DEFINITIONS]
content = 
	<eval>self.include_once("rotate-xy.ngc")</eval>	
	<eval>self.include_once("fv_drill-one.ngc")</eval>	


[CALL]
content =
  	(Drill irregular circle of #param_num holes)
 	o<#self_id> if [#param_ena]
 		#<radius> = [#param_d * #<_units_r> / 2]
 		#<i> = 0
 		o<#self_id-loop> while [#<i> LT #param_num]
 			o<#self_id-i> if [#<i> EQ 0]
 				o<rotate-xy> CALL [#<radius>] [0] [0] [0] [#param_h1]
 			o<#self_id-i> elseif [#<i> EQ 1]
 				o<rotate-xy> CALL [#<radius>] [0] [0] [0] [#param_h2]
 			o<#self_id-i> elseif [#<i> EQ 2]
 				o<rotate-xy> CALL [#<radius>] [0] [0] [0] [#param_h3]
 			o<#self_id-i> elseif [#<i> EQ 3]
 				o<rotate-xy> CALL [#<radius>] [0] [0] [0] [#param_h4]
 			o<#self_id-i> elseif [#<i> EQ 4]
 				o<rotate-xy> CALL [#<radius>] [0] [0] [0] [#param_h5]
 			o<#self_id-i> else
 				o<rotate-xy> CALL [#<radius>] [0] [0] [0] [#param_h6]
 			o<#self_id-i> endif 
 							
 			o<fv_drill-one> CALL [#param_cx + #<_rotate_result_x>] [#param_cy + #<_rotate_result_y>] [#param_depth] [#param_start]
 			#<i> = [#<i> + 1]
 		o<#self_id-loop> endwhile
 	o<#self_id> endif


[BEFORE]
content = 


[AFTER]
content = 
