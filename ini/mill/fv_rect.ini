[SUBROUTINE]
icon = center-rect.png
name = Rectangle
image = center-rect.png
type = rect
html_help = help/rectangles.html
help = 	<b>Creates rectangle from center or corner</b>
	Width / height may be negative
	Corners can be radiused or chamfered
order = ena fc h1 ref x y w h rot h2 ct cr h3 opt dir s dpt

[PARAM_ENA]
name = Enabled
type = bool
value = 1

[PARAM_FC]
name = Show final cut
type = bool
value = 1

[PARAM_H1]
name = <b>--- General ---</b>
type = header

[PARAM_X]
name = cX or corner X
type = float
icon = center.png
tool_tip = X0
value = 0

[PARAM_Y]
name = cY or corner Y
type = float
icon = center.png
tool_tip = Y0
value = 0

[PARAM_REF]
name = Referenced by
type = combo
options = Corner=0:Center=1
value = 1
tool_tip = Define reference point

[PARAM_W]
name = Width
type = float
icon = width.png
tool_tip = Positive or negative value
value = 3

[PARAM_H]
name = Height
type = float
icon = height.png
tool_tip = Positive or negative value
value = 2

[PARAM_ROT]
name = Rotation
type = float
digits = 2
icon = angle.png
tool_tip = Angle rotated
value = 0

[PARAM_H2]
name = <b>--- Corners ---</b>
type = header

[PARAM_CT]
name = Style
type = combo
options = None=0:Chamfer=1:Rounded=2:Inverted Round=3
#icon = corner-radius.png
tool_tip = Select corner style
value = 0

[PARAM_CR]
name = Radius
type = float
minimum_value = 0.0
icon = corner-radius.png
tool_tip = Radius or chamfer distance from corner
value = 0.0

[PARAM_H3]
name = <b>--- Cutting params ---</b>
type = header

[PARAM_OPT]
name = Cut options
type = combo
options = Inside=0:Outside=1:On the line=2:Create a pocket=3
icon = g4x.png
tool_tip = Select tool path
value = 0

[PARAM_DIR]
name = Cut direction
type = combo
options = Clockwise=2:Counter-Clockwise=3
icon = cw-ccw.png
tool_tip = Direction of path
value = 2

[PARAM_S]
name = Cut start
type = string
icon = dz.png
tool_tip = Surface is usual
value = #<_surface>

[PARAM_DPT]
name = Cut down to
type = string
icon = height.png
tool_tip = Negative value
value = #<_depth>

[DEFINITIONS]
content = 
	<eval>self.include_once("dot.ngc")</eval>
	<eval>self.include_once("line.ngc")</eval>
	<eval>self.include_once("rotate-xy.ngc")</eval>
	<eval>self.include_once("fv_cut-to.ngc")</eval>
	<eval>self.include_once("fv_entry-angle.ngc")</eval>
	<eval>self.include_once("fv_entry-arc.ngc")</eval>
	
	<eval>self.include_once("fv_rectangle.ngc")</eval>	

[CALL]
content = 
 	o<#self_id> if [#param_ena]
 		#<w>  = [#param_w * #<_units_w>]
 		#<h>  = [#param_h * #<_units_w>]
 		#<cr> = [#param_cr * #<_units_w>]
 		#<dpt> = [#param_dpt * #<_units_d>]	
 		o<fv_rectangle> CALL [#param_x] [#param_y] [#param_ref] [#<w>] [#<h>] [#param_rot] [#param_ct] [#<cr>] [#param_opt] [#param_dir] [#param_s] [#<dpt>] [#param_fc]
 	o<#self_id> endif

[BEFORE]
content = 
	
[AFTER]
content = 
